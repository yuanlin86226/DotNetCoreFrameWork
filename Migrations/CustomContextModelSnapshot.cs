// <auto-generated />
using System;
using Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace api.Migrations
{
    [DbContext(typeof(CustomContext))]
    partial class CustomContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113");

            modelBuilder.Entity("Models.ActionsModels", b =>
                {
                    b.Property<int>("action_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("action")
                        .HasMaxLength(50);

                    b.Property<DateTime>("create_time");

                    b.Property<string>("create_user_id")
                        .HasMaxLength(36);

                    b.Property<DateTime>("update_time");

                    b.Property<string>("update_user_id")
                        .HasMaxLength(36);

                    b.HasKey("action_id");

                    b.HasIndex("create_user_id");

                    b.HasIndex("update_user_id");

                    b.ToTable("actions");
                });

            modelBuilder.Entity("Models.FunctionNamesModels", b =>
                {
                    b.Property<int>("function_name_id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("create_time");

                    b.Property<string>("create_user_id")
                        .HasMaxLength(36);

                    b.Property<string>("function_name")
                        .HasMaxLength(50);

                    b.Property<string>("function_name_chinese")
                        .HasMaxLength(50);

                    b.Property<DateTime>("update_time");

                    b.Property<string>("update_user_id")
                        .HasMaxLength(36);

                    b.HasKey("function_name_id");

                    b.HasIndex("create_user_id");

                    b.HasIndex("update_user_id");

                    b.ToTable("function_names");
                });

            modelBuilder.Entity("Models.PermissionsModels", b =>
                {
                    b.Property<int>("permission_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("action_id");

                    b.Property<DateTime>("create_time");

                    b.Property<string>("create_user_id")
                        .HasMaxLength(36);

                    b.Property<int?>("function_name_id");

                    b.Property<DateTime>("update_time");

                    b.Property<string>("update_user_id")
                        .HasMaxLength(36);

                    b.HasKey("permission_id");

                    b.HasIndex("action_id");

                    b.HasIndex("create_user_id");

                    b.HasIndex("function_name_id");

                    b.HasIndex("update_user_id");

                    b.ToTable("permissions");
                });

            modelBuilder.Entity("Models.RolePermissionsModels", b =>
                {
                    b.Property<int>("role_permission_id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("create_time");

                    b.Property<string>("create_user_id")
                        .HasMaxLength(36);

                    b.Property<int?>("permission_id");

                    b.Property<int?>("role_id");

                    b.Property<DateTime>("update_time");

                    b.Property<string>("update_user_id")
                        .HasMaxLength(36);

                    b.HasKey("role_permission_id");

                    b.HasIndex("create_user_id");

                    b.HasIndex("permission_id");

                    b.HasIndex("role_id");

                    b.HasIndex("update_user_id");

                    b.ToTable("role_permissions");
                });

            modelBuilder.Entity("Models.RolesModels", b =>
                {
                    b.Property<int>("role_id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("create_time");

                    b.Property<string>("create_user_id")
                        .HasMaxLength(36);

                    b.Property<string>("role")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime>("update_time");

                    b.Property<string>("update_user_id")
                        .HasMaxLength(36);

                    b.HasKey("role_id");

                    b.HasIndex("create_user_id");

                    b.HasIndex("update_user_id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("Models.UsersModels", b =>
                {
                    b.Property<string>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<string>("account_number")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime>("create_date");

                    b.Property<DateTime>("due_date");

                    b.Property<string>("email");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("phone");

                    b.Property<DateTime?>("resignation_date");

                    b.Property<int?>("role_id");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("user_id");

                    b.HasIndex("account_number")
                        .IsUnique();

                    b.HasIndex("role_id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Models.ActionsModels", b =>
                {
                    b.HasOne("Models.UsersModels", "create_user")
                        .WithMany("ActionsCreateUser")
                        .HasForeignKey("create_user_id");

                    b.HasOne("Models.UsersModels", "update_user")
                        .WithMany("ActionsUpdateUser")
                        .HasForeignKey("update_user_id");
                });

            modelBuilder.Entity("Models.FunctionNamesModels", b =>
                {
                    b.HasOne("Models.UsersModels", "create_user")
                        .WithMany("FunctionNamesCreateUser")
                        .HasForeignKey("create_user_id");

                    b.HasOne("Models.UsersModels", "update_user")
                        .WithMany("FunctionNamesUpdateUser")
                        .HasForeignKey("update_user_id");
                });

            modelBuilder.Entity("Models.PermissionsModels", b =>
                {
                    b.HasOne("Models.ActionsModels", "actions")
                        .WithMany("Permissions")
                        .HasForeignKey("action_id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Models.UsersModels", "create_user")
                        .WithMany("PermissionsCreateUser")
                        .HasForeignKey("create_user_id");

                    b.HasOne("Models.FunctionNamesModels", "function_names")
                        .WithMany("Permissions")
                        .HasForeignKey("function_name_id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Models.UsersModels", "update_user")
                        .WithMany("PermissionsUpdateUser")
                        .HasForeignKey("update_user_id");
                });

            modelBuilder.Entity("Models.RolePermissionsModels", b =>
                {
                    b.HasOne("Models.UsersModels", "create_user")
                        .WithMany("RolePermissionsCreateUser")
                        .HasForeignKey("create_user_id");

                    b.HasOne("Models.PermissionsModels", "permissions")
                        .WithMany("RolePermissions")
                        .HasForeignKey("permission_id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Models.RolesModels", "roles")
                        .WithMany("RolePermissions")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Models.UsersModels", "update_user")
                        .WithMany("RolePermissionsUpdateUser")
                        .HasForeignKey("update_user_id");
                });

            modelBuilder.Entity("Models.RolesModels", b =>
                {
                    b.HasOne("Models.UsersModels", "create_user")
                        .WithMany("RolesCreateUser")
                        .HasForeignKey("create_user_id");

                    b.HasOne("Models.UsersModels", "update_user")
                        .WithMany("RolesUpdateUser")
                        .HasForeignKey("update_user_id");
                });

            modelBuilder.Entity("Models.UsersModels", b =>
                {
                    b.HasOne("Models.RolesModels", "roles")
                        .WithMany("Users")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.SetNull);
                });
#pragma warning restore 612, 618
        }
    }
}
